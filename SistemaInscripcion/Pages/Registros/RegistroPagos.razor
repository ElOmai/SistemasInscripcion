@page "/RegistroPagos/{PagoId:int}"
@using Models
@using Controllers
<div class="container">
    <h3 class="display-4 text-center">Registro de Pagos</h3>
    <EditForm Model="Pago" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
        <div class="form-group">
            <label>PagoId</label>
            <div class="input-group">
                <InputNumber @bind-Value="Pago.PagoId" class="form-control"></InputNumber>
                <div class="input-group-append">
                    <button type="button" class="btn btn-primary input-group-text" @onclick="Buscar">Buscar</button>
                </div>
            </div>
        </div>
        <div class="form-group">
            <label>Fecha</label>
            <InputDate @bind-Value="Pago.Fecha" class="form-control"></InputDate>
        </div>
        <div class="form-group">
            <label>inscripcionId</label>
            <InputNumber @bind-Value="Pago.InscripcionId" class="form-control"></InputNumber>
        </div>
        <div class="form-group">
            <label>Monto</label>
            <InputNumber @bind-Value="Pago.Monto" class="form-control"></InputNumber>
        </div>
        <ValidationSummary />
        <p class="text-muted">@Mensaje</p>
        <div class="form-group">
            <button type="button" class="btn btn-primary" @onclick="Limpiar">Limpiar</button>
            <button type="submit" class="btn btn-success">Guardar</button>
            <button type="button" class="btn btn-danger" @onclick="Eliminar">Eliminar</button>
        </div>
    </EditForm>
</div>

@code {
    [Parameter]
    public int PagoId { get; set; }
    public Pagos Pago { get; set; }
    public string Mensaje { get; set; }
    protected override void OnInitialized()
    {
        Pago = new Pagos();
        if (PagoId > 0)
        {
            Pago.PagoId = PagoId;
            Buscar();
        }
    }
    private void Guardar()
    {
        try
        {
            if (PagosController.Guardar(Pago))
            {
                Mensaje = "Gurdado correctamente";
                Pago = new Pagos();
            }
            else
            {
                Mensaje = "No se pudo guardar";
            }
        }
        catch (Exception)
        {
            Mensaje = "Hubo un Error!!";
        }
    }

    private void Buscar()
    {
        try
        {
            Pagos pago = PagosController.Buscar(Pago.PagoId);
            if (pago != null)
            {
                Pago = pago;
                Mensaje = string.Empty;

            }
            else
            {
                Mensaje = "No se Encontro";
            }
        }
        catch (Exception)
        {
            Mensaje = "Hubo un Error!!";
        }
    }
    private void Limpiar()
    {
        Pago = new Pagos();
        Mensaje = string.Empty;
    }

    private void Eliminar()
    {
        try
        {
            if (PagosController.Eliminar(Pago.PagoId))
            {
                Mensaje = "Eliminado correctamente";
                Pago = new Pagos();
            }
            else
            {
                Mensaje = "No se pudo eliminar, NO existe ";
            }
        }
        catch (Exception)
        {
            Mensaje = "Hubo un Error!!";
        }
    }
}